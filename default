##
# You should look at the following URL's in order to grasp a solid understanding of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
# ----------------------------------
# ORIGINAL SAVED AS default-original
# ----------------------------------

## nginx will be configured three ways:
# 1. Web server to serve up website pages in PHP (first server block)
# 2. Web server to serve up API specifications in Swagger (second server block, first location)
# 3. Proxy server to redirect to nodejs API (second server block, second location)


# 1. Web server to serve up website pages in PHP
server{
    listen 80;
    server_name remitbroker.com www.remitbroker.com;

    root /home/ubuntu/projects/RemitBroker/www;
    auth_basic "Restricted";
    auth_basic_user_file /home/ubuntu/projects/RemitBroker/.htpasswd;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
		# With php7.0-cgi alone:
		#fastcgi_pass 127.0.0.1:9000;
		# With php7.0-fpm:
		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	}
}

# 2. Web server to serve up API specifications in Swagger and Proxy server to redirect to nodejs API depending on trailing URL segment
server{
    listen 80;
    server_name api.remitbroker.com;

    #show the latest version if no version is specified
    #root /home/ubuntu/projects/RemitBroker/api/v1/interface;
    auth_basic "Restricted";
    auth_basic_user_file /home/ubuntu/projects/RemitBroker/.htpasswd;

	# Add index.php to the list if you are using PHP
	index index.html;

	location /v1/interface {
        #show the specific version, note that location is added to root
        root /home/ubuntu/projects/RemitBroker/api;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

    # Proxy server to redirect to nodejs API
    # Route to nodejs server.js on 8080 for v1
    # Need  solution to run multiple versions. On different ports?
    location /v1 {
        proxy_pass http://localhost:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Default (catch all) server configuration
# Not encountered in usual circumstances but redirect to www.remitbroker.com
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
